basePath: /v1
definitions:
  model.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      due_date:
        type: string
      id:
        type: integer
      status:
        description: Pending, InProgress, Completed
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for managing tasks.
  title: Task Management API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get a list of all tasks, supports pagination and filtering by status
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      - description: Task status filter (Pending, InProgress, Completed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task with title, description, status, and due date
      parameters:
      - description: Task to create
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create task
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "500":
          description: Failed to delete task
          schema:
            type: string
      summary: Delete a task by ID
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get details of a specific task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Get a task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update an existing task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid request payload or ID
          schema:
            type: string
        "500":
          description: Failed to update task
          schema:
            type: string
      summary: Update an existing task
      tags:
      - tasks
swagger: "2.0"
